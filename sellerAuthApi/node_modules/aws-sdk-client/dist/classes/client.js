"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const AWS = __importStar(require("aws-sdk"));
class Client {
    constructor(config = {
        awsClient: AWS,
        region: 'us-east-1',
        debug: false
    }) {
        this.aws = config.awsClient || AWS;
        this.region = config.region || '';
        this.debug = config.debug || false;
    }
    getAwsServiceClient(service, region = this.region) {
        if (service === 'DynamoDB') {
            return new this.aws.DynamoDB.DocumentClient({ region });
        }
        return new this.aws[service](region);
    }
    request(service, method, params, region = this.region) {
        return __awaiter(this, void 0, void 0, function* () {
            this.trackInfo({ service, method, params, region });
            try {
                const awsService = this.getAwsServiceClient(service, region);
                const request = yield awsService[method](params).promise();
                this.trackInfo(request);
                return request;
            }
            catch (e) {
                this.trackError(e);
                throw e;
            }
        });
    }
    trackInfo(data) {
        if (this.debug)
            console.log('Tracker:Info: %j', data);
    }
    trackError(data) {
        console.log('Tracker:Error: %j', data);
    }
}
exports.default = Client;
//# sourceMappingURL=client.js.map